Bradley Mont
UID: 804-993-030
Professor Smallberg
CS 31, Lecture 1, Discussion 1D

Programming Assignment 1: Getting Started with C++

Step 5:

For Step 5 of the assignment, I ran the given program with input integers designed to produce incorrect output. For example, I inputted 10 people surveyed, 20 people in approval of the president, and 30 people in disapproval of the president. The results were that 200.0% say they approve and 300.0% say they disapprove. This input is incorrect because the number of people surveyed should be the sum of the people in approval and people in disapproval. The people in approval or disapproval cannot be larger than the amount of people surveyed. Plus, a percent of a sample should not be over 100%. Additionally, I inputted 6 people surveyed, -5 people in approval of the president, and -1 people in disapproval of the president. This gave an output of    -83.3% of the people in approval and -16.7% of the people in disapproval. There cannot be a negative amount of people or a negative percentage of a sample, so this input did produce nonsensical results. Finally, I inputted 20 people surveyed, 10 people in approval of the president, and 10 people in disapproval of the president. Although the output contained the correct percentages (50% each), the output incorrectly stated that ÒMore people disapprove than approve.Ó Therefore, when the same amount of people are in favor of and against the president, the program produces the incorrect output that more people disapprove than approve.

Step 6: logic_error.cpp

For Step 6, I introduced logic errors into the program that caused incorrect results without preventing a successful build. For example, I removed the Ò100 *Ó  in line 20 for the calculation of the pctApprove and pctDisapprove. The Ò100 *Ó was essential for displaying the percent version of the people opposed to the decimal. If this was the only error produced, the program would output .60% of people when in reality it should be 60% of people. In addition, I multiplied the numApprove (and numDisapprove) with the numSurveyed instead of dividing them (in lines 20 and 21). They should be divided to get the correct proportion of each group of people, not multiplied. 6 people out of 12 in approval of the president would incorrectly produce 72% instead of 50% (if that were the only error). Finally, I replaced the Ò>Ó with a Ò<Ó in line 30, so the program will produce the incorrect answer concerning which group of people (those who approve vs disapprove) is larger. If 2 people disapprove and 3 people approve, the program will incorrectly display that more people disapprove. With all three of these errors, an input of 14 people surveyed, 5 in approval, and 9 in disapproval incorrectly produces 70% in approval, 126% in disapproval, and more people in approval, which is all wrong. The compiler did not report any error messages. 

Step 7: compile_error.cpp

For Step 7, I introduced compile errors into the program that caused the program to fail to compile correctly. First of all, I removed the semicolon at the end of line 13. The compiler reported the error message, ÒExpected Ô;Õ after expression.Ó Each line should end with a semicolon. Additionally, in line 18, I incorrectly referred to the variable numDisapprove as NumDisapprove, and the compiler gave the error message, ÒUse of undeclared identifier 'NumDisapprove'; did you mean 'numDisapprove'?Ó C++ is case-sensitive, so capitalizing the N caused the program to refer to a completely different variable that was not declared in the program. Plus, in line 30, I incorrectly typed the variable numApprove as numberApprove, and the compiler stated ÒUse of undeclared identifier 'numberApprove'; did you mean 'numApprove'?Ó The spelling of a variable must directly match the spelling when it was declared, so I referred to a completely different variable not declared in this program. Finally, in line 34, I incorrectly put Ò{Ò instead of Ò}Ó. The compiler gave the error message, ÒExpected '}'.Ó The } denotes the end of the main method, so I never ended the main method properly. 
